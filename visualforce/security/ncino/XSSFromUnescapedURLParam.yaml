rules:
  - id: vf.injection.xss-from-unescaped-url-param
    languages:
      - generic
    patterns:
      - pattern-either:
        # Cannot use full VF syntax of {!$...} because Semgrep thinks CurrentPage is a metavariable
        - pattern: <apex:outputText...escape="false"...value="{!...CurrentPage.parameters.$URL_PARAM}".../>
        - pattern: <apex:outputText...value="{!...CurrentPage.parameters.$URL_PARAM}"...escape="false".../>
        - pattern: <script>...'{!...CurrentPage.parameters.$URL_PARAM}'...</script>
      - pattern-not: <script>...'{!...JSENCODE(...CurrentPage.parameters.$URL_PARAM})'...</script>
    paths:
      include:
        - "*.component"
        - "*.page"
    severity: ERROR
    message: >-
      To remediate this issue, ensure that all URL parameters are properly
      escaped before including them in scripts. Please update your code
      to use either the JSENCODE method to escape URL parameters
      or the escape="true" attribute on <apex:outputText> tags.
      Passing URL parameters directly into scripts and DOM sinks creates
      an opportunity for Cross-Site Scripting attacks. Cross-Site
      Scripting (XSS) attacks are a type of injection, in which malicious
      scripts are injected into otherwise benign and trusted websites. To
      remediate this issue, ensure that all URL parameters are properly
      escaped before including them in scripts.
    metadata:
      category: security
      subcategory: injection
      technology: ncino
      reference: https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/pages_security_tips_xss.htm
